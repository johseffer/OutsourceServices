@model ServiçosExternos.Models.Service

@{
    ViewBag.Title = "Serviços Externos - Alteração de Ordem de Serviço";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-body">   

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-inline">
            <div style="padding-left:30px;">
                <h4>Alteração de Ordem de Serviço</h4>
            </div>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="row col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4">
                    @Html.LabelFor(model => model.Value, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                        @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "form-control col-xs-12 col-sm-12 col-md-12 col-lg-12", style = "width:100%;" } })
                        @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4">
                    @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control col-xs-12 col-sm-12 col-md-12 col-lg-12", style = "width:100%;" } })
                        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4">
                    @Html.LabelFor(model => model.ServiceType, "Tipo", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                        @Html.EditorFor(model => model.ServiceType, new { htmlAttributes = new { @class = "form-control col-xs-12 col-sm-12 col-md-12 col-lg-12", style = "width:100%;" } })
                        @Html.ValidationMessageFor(model => model.ServiceType, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row col-xs-12 col-sm-12 col-md-12 col-lg-12">

                <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
                    @Html.LabelFor(model => model.Cliente, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                        @Html.DropDownList("ClienteId", null, htmlAttributes: new { @class = "form-control col-xs-12 col-sm-12 col-md-12 col-lg-12", style = "width:100%;" })
                        @Html.ValidationMessageFor(model => model.ClienteId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
                    @Html.LabelFor(model => model.Fornecedor, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                        @Html.DropDownList("FornecedorId", null, htmlAttributes: new { @class = "form-control col-xs-12 col-sm-12 col-md-12 col-lg-12", style = "width:100%;" })
                        @Html.ValidationMessageFor(model => model.FornecedorId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <hr />
            <div align="right" class="row col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <div class="col-md-offset-2 col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <br />
                    <input type="submit" value="Salvar" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Voltar a lista", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</div>